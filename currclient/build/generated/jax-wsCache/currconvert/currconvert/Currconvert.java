
package currconvert;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "currconvert", targetNamespace = "http://currconvert/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Currconvert {


    /**
     * 
     * @param r
     * @return
     *     returns double
     */
    @WebMethod(operationName = "r_to_d")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "r_to_d", targetNamespace = "http://currconvert/", className = "currconvert.RToD")
    @ResponseWrapper(localName = "r_to_dResponse", targetNamespace = "http://currconvert/", className = "currconvert.RToDResponse")
    @Action(input = "http://currconvert/currconvert/r_to_dRequest", output = "http://currconvert/currconvert/r_to_dResponse")
    public double rToD(
        @WebParam(name = "r", targetNamespace = "")
        double r);

    /**
     * 
     * @param d
     * @return
     *     returns double
     */
    @WebMethod(operationName = "d_to_r")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "d_to_r", targetNamespace = "http://currconvert/", className = "currconvert.DToR")
    @ResponseWrapper(localName = "d_to_rResponse", targetNamespace = "http://currconvert/", className = "currconvert.DToRResponse")
    @Action(input = "http://currconvert/currconvert/d_to_rRequest", output = "http://currconvert/currconvert/d_to_rResponse")
    public double dToR(
        @WebParam(name = "d", targetNamespace = "")
        double d);

}
